server:
    context-path: /springboot-hsqldb
    port: 9091
spring:
    datasource:
        driver-class-name: org.hsqldb.jdbcDriver
        password: tony
        url: jdbc:hsqldb:file:D:\test\amdocs
        username: tony
    h2:
        console:
            enabled: true
    jpa        :
        hibernate:
            ddl-auto: update
        show-sql: true
    application:
        name: userProfile-Service
    cloud:
        loadbalancer:
            ribbon:
                enable: true
    kafka      :
        bootstrap-servers: 127.0.0.1:9092 #here you can define the cluster
        producer:
            key-serializer  : org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
            acks            : 1
            retries         : 0
            batch-size      : 16384
            buffer-memory   : 33554432
            compression-type: gzip #压缩格式
        consumer:
            auto-offset-reset: earliest #最早未被消费的offset
            enable-auto-commit: false #是否开启自动提交
            #auto-commit-interval: 1000 #自动提交的时间间隔
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #key解码方式
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer #value解码方式
            group-id: kafka.consumer.group.id.1
            max-poll-records: 50
            properties:
                session-timeout-ms: 20000 #连接超时时间
                max-poll-interval-ms: 15000 #手动提交设置与poll的心跳数,如果消息队列中没有消息，等待毫秒后，调用poll()方法。如果队列中有消息，立即消费消息，每次消费的消息的多少可以通过max.poll.records配置。
                max-partition-fetch-bytes: 15728640 #设置拉取数据的大小 15M
        client-id: kafkacli
        listener:
            ack-mode: manual_immediate
eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:8001/eureka/
async:
    executor:
        thread:
            core_pool_size: 15 #核心线程数量，线程池创建时候初始化的线程数
            max_pool_size: 15 #最大线程数，只有在缓冲队列满了之后才会申请超过核心线程数的线程
            queue_capacity: 99999 #缓冲队列，用来缓冲执行任务的队列
            keep_alive_seconds: 60 #当超过了核心线程出之外的线程在空闲时间到达之后会被销毁
            await_termination_seconds: 30 #设置线程池中任务的等待时间，如果超过这个时候还没有销毁就强制销毁，以确保应用最后能够被关闭，而不是阻塞住。
            name:
                prefix: async-service-
                prefixson: async-service-son
    

         